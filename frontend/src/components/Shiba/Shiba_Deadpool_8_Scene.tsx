/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 scene.gltf -t
Author: Quickhatch_art (https://sketchfab.com/Quickhatch_art)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/shiba-deadpool-c2b3c2a3786047c0b36ce38aec2c2f09
Title: Shiba Deadpool
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { OrbitControls, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useThree } from "@react-three/fiber";

function Controls() {
  const {
    camera,
    gl: { domElement },
  } = useThree();

  return <OrbitControls args={[camera, domElement]} />;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_6: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_8: THREE.Mesh;
    Object_9: THREE.Mesh;
  };
  materials: {
    body: THREE.MeshStandardMaterial;
    collar: THREE.MeshStandardMaterial;
    eyes: THREE.MeshStandardMaterial;
    face: THREE.MeshStandardMaterial;
    orecchie: THREE.MeshStandardMaterial;
    tail: THREE.MeshStandardMaterial;
    zampe_post: THREE.MeshStandardMaterial;
    zampre_ant: THREE.MeshStandardMaterial;
  };
};

export function Shiba_Deadpool_8(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/model/Shiba_Deadpool_8/scene.gltf"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null} scale={0.1}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.body} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.collar} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.eyes} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.face} />
        <mesh
          geometry={nodes.Object_6.geometry}
          material={materials.orecchie}
        />
        <mesh geometry={nodes.Object_7.geometry} material={materials.tail} />
        <mesh
          geometry={nodes.Object_8.geometry}
          material={materials.zampe_post}
        />
        <mesh
          geometry={nodes.Object_9.geometry}
          material={materials.zampre_ant}
        />
        <Controls />
      </group>
    </group>
  );
}

useGLTF.preload("/model/Shiba_Deadpool_8/scene.gltf");
